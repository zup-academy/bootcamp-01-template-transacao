# Application name
spring.application.name=transacao

# Postgres
spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5432/transacao}
spring.datasource.username=${DB_USER:keycloak}
spring.datasource.password=${DB_PASS:password}
spring.datasource.name=transacaoDataSource
spring.datasource.driverClassName=org.postgresql.Driver

# JPA
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.javax.persistence.query.timeout = 100

spring.main.allow-bean-definition-overriding=true

# Actuator
management.endpoints.enabled-by-default=false
management.endpoint.health.enabled=true
management.endpoint.info.enabled=true
management.endpoint.prometheus.enabled=true

# Health
management.endpoints.web.exposure.include=info,health,prometheus
management.metrics.tags.aplicacao=serviço de transacao
management.metrics.tags.ambiente=desenvolvimento

# Kafka
spring.kafka.bootstrap-servers=${KAFKA_HOST:localhost:9092}
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP_ID:transacao}
spring.kafka.consumer.auto-offset-reset=${KAFKA_AUTO-OFFSET-RESET:latest}
spring.kafka.topic.transactions=${KAFKA_TOPICS:transacoes}

# Opentracing - Jaeger
opentracing.jaeger.enabled=${JAEGER_ENABLE:true}
opentracing.jaeger.service-name=${spring.application.name}
opentracing.jaeger.http-sender.url=${JAEGER_URL:http://host.docker.internal:14268/api/traces}
opentracing.jaeger.probabilistic-sampler.sampling-rate=1
opentracing.jaeger.log-spans=false

# KeyCloak
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/nosso-cartao}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/nosso-cartao/protocol/openid-connect/certs}