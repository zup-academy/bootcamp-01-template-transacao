server.port = 8081
spring.application.name=transacao

#### Banco de dados ####
spring.datasource.url=${URL_DATABASE:jdbc:postgresql://localhost:5432/transacao}
spring.datasource.username=${DB_USER:keycloak}
spring.datasource.password=${DB_PASSWORD:password}
spring.jpa.show-sql=${SHOW_SQL:true}
spring.jpa.hibernate.ddl-auto=${JPA_DDL:update}

#### Pool de conexao ####
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.maximum-pool-size=15
spring.datasource.hikari.minimum-idle=8
spring.datasource.hikari.initialization-fail-timeout=2000
spring.datasource.hikari.isolate-internal-queries=true
spring.datasource.hikari.validation-timeout=3000

#### KAFKA ####
spring.kafka.bootstrap-servers=${KAFKA_HOST:localhost:9092}
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.auto-offset-reset=${KAFKA_AUTO-OFFSET-RESET:latest}
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP_ID:aplicacao_transacao}
spring.kafka.topic.transactions = ${TOPIC_TRANSACTIONS:transacoes}
spring.kafka.topic.cartao = ${TOPIC_CARTAO:cartao}
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=5000

#### Url ####
feign.url-transacao = ${URL_TRANSACAO:http://localhost:7777}
feign.url-cartao = ${URL_CARTAO:http://localhost:8888}

#### Security ####
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/nossa-transacao}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/nossa-transacao/protocol/openid-connect/certs}

#### metrics ####
management.endpoints.web.exposure.include=info,health,prometheus, metrics
management.endpoint.prometheus.enabled = true
management.metrics.export.prometheus.enabled = true
management.endpoints.web.exposure.exclude=env,beans

### OpenTracing ###
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}
opentracing.jaeger.service-name=${spring.application.name}
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}
opentracing.spring.cloud.jdbc.enabled=false
