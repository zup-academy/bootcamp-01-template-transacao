spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation = true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL95Dialect

spring.datasource.url=${DB_URL:jdbc:postgresql://host.docker.internal:5432/transacao}
spring.datasource.username =keycloak
spring.datasource.password = password
spring.jpa.hibernate.ddl-auto = update

# Endereço do Kafka
spring.kafka.bootstrap-services=${KAFKA_HOST:localhost:9092}

# Formato da chave (String) recebida
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringSerializer

# Formato da mensagem/evento (JSON) recebido
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

# Identificador do grupo de consumo
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP_ID:transacao}

# Modelo de coleta do consumidor (latest, earliest, none)
spring.kafka.consumer.auto-offset-reset=${KAFKA_AUTO-OFFSET-RESET:latest}

spring.kafka.topic.transactions=${KAFKA_TOPICS:transacoes}
