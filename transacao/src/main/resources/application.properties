## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://localhost:3306/transacao?useSSL=false&useTimezone=true&serverTimezone=UTC
spring.datasource.username="vault"
spring.datasource.password="vault"

# Dialeto SQL melhorar o SQL gerado pelo Hibernate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.data.jpa.repositories.bootstrap-mode=default

# Endereço do Kafka
spring.kafka.bootstrap-servers=${KAFKA_HOST:localhost:9092}
# Formato da chave (String) recebida!
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringSerializer

# Formato da mensagem \ evento (JSON) recebida(o)!
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

# Identificador do grupo de consumo
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP_ID:Bootcamp-Transacao}

# Modelo de coleta do consumidor (latest, earliest, none)
spring.kafka.consumer.auto-offset-reset=${KAFKA_AUTO-OFFSET-RESET:latest}

## spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/Proposta}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/Proposta/protocol/openid-connect/certs}

transacao.secret=MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAp9MLPgOCEF13FUUiP8gicNZzrDU6FZJ+gTaFnvW9Y0dv6aRS4SVHBWUktwX7RK22Xon5PxiL+4WcXBJ/DXRwYSSh3Fz4oQyru71C3fnfam67uRtSXPr1PnOqcyogr+9l5u03bXctiAzLbkMsXws3yGmArp9p2ZOzQwkWa1pkTf+MQWGBtH7+hnab5+j4DybHjIdEB5V50V9G5yFvFFblq1OlZvoyx4p+yiHvTXnnFmbq5P1kr5d5rCoCYpAWpdu0jOs/yN912xsmOhlnTDxvnbn7W15sPqNz7m6foZJuI320Yx05lyde/j0vO/awrcz3zwyNXA2TgFZXjaWPBPmTgwIDAQAB